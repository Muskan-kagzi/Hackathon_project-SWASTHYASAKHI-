<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>SwasthyaSakhi</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
  <script src="https://unpkg.com/lucide@latest"></script>
  <style>
/* Global */
* { margin: 0; padding: 0; box-sizing: border-box; }
body {
  font-family: "Poppins", sans-serif;
  background: #fff;
  color: #333;
  line-height: 1.6;
  overflow-x: hidden;
}

/* Error Handling Styles */
.error-toast {
  position: fixed;
  top: 20px;
  right: 20px;
  background: linear-gradient(45deg, #ff1744, #ff5722);
  color: white;
  padding: 1rem 1.5rem;
  border-radius: 12px;
  box-shadow: 0 8px 32px rgba(255, 23, 68, 0.3);
  z-index: 10000;
  transform: translateX(400px);
  transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.error-toast.show {
  transform: translateX(0);
}

.error-toast.success {
  background: linear-gradient(45deg, #4caf50, #66bb6a);
}

.error-toast.warning {
  background: linear-gradient(45deg, #ff9800, #ffc107);
}

.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(106, 13, 173, 0.9);
  backdrop-filter: blur(10px);
  display: none;
  justify-content: center;
  align-items: center;
  z-index: 9998;
}

.spinner {
  width: 60px;
  height: 60px;
  border: 4px solid rgba(255, 255, 255, 0.3);
  border-top: 4px solid #fff;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Header with enhanced animations */
.header {
  height: 80px;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  box-shadow: 0 8px 32px rgba(106, 13, 173, 0.15);
  position: sticky;
  top: 0; 
  z-index: 1000;
  transition: all 0.3s ease;
}

.header.scrolled {
  background: rgba(255, 255, 255, 0.98);
  box-shadow: 0 12px 40px rgba(106, 13, 173, 0.2);
}

.nav-container {
  display: flex; 
  justify-content: space-between; 
  align-items: center;
  padding: 1rem 2rem;
  
    /* margin-right: 40px; */

}

.logo { 
  display: flex; 
  align-items: center; 
  gap: 0.5rem; 
  font-weight: 700; 
  font-size: 1.3rem; 
  color: #6A0DAD;
  /* margin-right: 40px; */
  transition: transform 0.3s ease;
  padding-right: 100px;
}

.logo:hover {
  transform: scale(1.05);
}

.logo-icon { 
  width:150px;
  height:60px;
  background-image: url("/logo.jpg");
  background-size: cover;   
  background-position: center; 
  border-radius: 15px;
}

@keyframes heartbeat {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.1); }
}

.nav-links a {
  margin: 0 1rem; 
  text-decoration: none; 
  font-weight: 500;
  color: #555; 
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.nav-links a::before {
  content: '';
  position: absolute;
  bottom: 0;
  left: -100%;
  width: 100%;
  height: 2px;
  background: linear-gradient(45deg, #6A0DAD, #9c27b0);
  transition: left 0.3s ease;
}

.nav-links a:hover::before {
  left: 0;
}

.nav-links a:hover { 
  color: #6A0DAD; 
  transform: translateY(-2px);
}

.menu-btn { 
  display: none; 
  background: none; 
  border: none; 
  cursor: pointer; 
  transition: transform 0.3s ease;
}

.menu-btn:hover {
  transform: rotate(90deg);
}

/* Enhanced Hero Section */
.hero {
  position: relative;
  min-height: 100vh;
  display: flex; 
  align-items: center; 
  justify-content: center;
  text-align: center;
  color: white;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  overflow: hidden;
}

.hero::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="75" cy="75" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="50" cy="10" r="0.5" fill="rgba(255,255,255,0.05)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
  animation: backgroundMove 20s linear infinite;
}

@keyframes backgroundMove {
  0% {
    transform: translateX(0) translateY(0);
  }
  100% {
    transform: translateX(-100px) translateY(-100px);
  }
}

.hero-overlay { 
  position: absolute; 
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0,0,0,0.3);
}

.hero-content { 
  position: relative; 
  z-index: 2; 
  max-width: 700px;
  text-align: center;
  color: white;
  animation: heroFadeIn 1.2s ease-out 0.5s both;
}

@keyframes heroFadeIn {
  0% {
    opacity: 0;
    transform: translateY(50px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.hero-content h2 { 
  font-size: 3.5rem; 
  font-weight: 700;
  margin-bottom: 1rem;
  animation: textGlow 3s ease-in-out infinite alternate;
}

@keyframes textGlow {
  0% {
    text-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
  }
  100% {
    text-shadow: 0 0 30px rgba(255, 255, 255, 0.8), 0 0 40px rgba(147, 51, 234, 0.3);
  }
}

.gradient-text {
  background: linear-gradient(135deg, #fbbf24, #f59e0b);
  -webkit-background-clip: text; 
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.subtitle { 
  font-size: 1.5rem; 
  margin-bottom: 1rem;
  opacity: 0.9;
}

.desc { 
  font-size: 1.1rem; 
  margin-bottom: 2rem;
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
  opacity: 0.8;
}

.hero-buttons { 
  display: flex; 
  gap: 1rem; 
  justify-content: center;
  margin-bottom: 2rem;
  flex-wrap: wrap;
}

.btn {
  padding: 15px 30px;
  border: none;
  border-radius: 50px;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.btn::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s ease;
}

.btn:hover::before {
  left: 100%;
}

.btn.primary { 
  background: linear-gradient(135deg, #9333ea, #a855f7);
  color: white;
  box-shadow: 0 10px 30px rgba(147, 51, 234, 0.3);
}

.btn.primary:hover { 
  transform: translateY(-3px);
  box-shadow: 0 15px 40px rgba(147, 51, 234, 0.4);
}

.btn.secondary { 
  background: rgba(255, 255, 255, 0.2);
  color: white;
  border: 2px solid rgba(255, 255, 255, 0.3);
  backdrop-filter: blur(10px);
}

.btn.secondary:hover { 
  background: rgba(255, 255, 255, 0.3);
  transform: translateY(-3px);
}

.badge { 
  background: rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(10px);
  padding: 10px 20px;
  border-radius: 25px;
  font-size: 0.9rem;
  display: inline-block;
  border: 1px solid rgba(255, 255, 255, 0.3);
}

/* Enhanced Features Section with Carousel */
.features { 
  padding: 4rem 2rem; 
  text-align: center; 
  background: linear-gradient(135deg, #f5f0ff, #faf7ff);
  position: relative;
}

.features::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle at 70% 30%, rgba(106, 13, 173, 0.05) 0%, transparent 50%);
}

.features h3 {
  font-size: 2.5rem;
  margin-bottom: 1rem;
  position: relative;
  z-index: 1;
}

.highlight { 
  color: #6A0DAD;
  position: relative;
}

.highlight::after {
  content: '';
  position: absolute;
  bottom: -5px;
  left: 0;
  width: 100%;
  height: 3px;
  background: linear-gradient(45deg, #6A0DAD, #9c27b0);
  border-radius: 2px;
}

.section-desc {
  position: relative;
  z-index: 1;
  margin-bottom: 2rem;
}

.carousel-container {
  position: relative;
  max-width: 1200px;
  margin: 0 auto;
  overflow: hidden;
  border-radius: 20px;
  box-shadow: 0 20px 60px rgba(106, 13, 173, 0.15);
}

.feature-carousel {
  display: flex;
  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.feature-slide {
  min-width: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
  padding: 2rem;
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(10px);
}

.feature-card {
  background: linear-gradient(145deg, #fff, #f8f4ff);
  padding: 2.5rem;
  border-radius: 20px;
  box-shadow: 0 8px 32px rgba(106, 13, 173, 0.1);
  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  position: relative;
  overflow: hidden;
  text-decoration: none;
  color: inherit;
  border: 1px solid rgba(106, 13, 173, 0.1);
}

.feature-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(106, 13, 173, 0.1), transparent);
  transition: left 0.6s ease;
}

.feature-card:hover::before {
  left: 100%;
}

.feature-card:hover { 
  transform: translateY(-15px) scale(1.02);
  box-shadow: 0 20px 60px rgba(106, 13, 173, 0.2);
  border-color: rgba(106, 13, 173, 0.3);
}

.feature-card:hover .icon {
  transform: scale(1.1) rotate(10deg);
  box-shadow: 0 10px 30px rgba(106, 13, 173, 0.3);
}

.icon {
  font-size: 2rem; 
  margin-bottom: 1.5rem; 
  display: inline-flex;
  padding: 1.2rem; 
  border-radius: 50%; 
  color: #fff;
  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  position: relative;
}

.icon::after {
  content: '';
  position: absolute;
  inset: -5px;
  border-radius: 50%;
  background: linear-gradient(45deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.1));
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}

.icon:hover::after {
  opacity: 1;
}

.bg-purple { 
  background: linear-gradient(45deg, #6A0DAD, #8e24aa);
}

.bg-purple-dark { 
  background: linear-gradient(45deg, #4a0072, #6a1b9a);
}

.bg-purple-light { 
  background: linear-gradient(45deg, #9c27b0, #ba68c8);
}

.feature-card h4 {
  font-size: 1.3rem;
  margin-bottom: 0.8rem;
  color: #333;
  font-weight: 600;
}

.feature-card p {
  color: #666;
  font-size: 1rem;
}

.carousel-nav {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin-top: 2rem;
}

.carousel-btn {
  background: linear-gradient(45deg, #6A0DAD, #9c27b0);
  border: none;
  color: white;
  padding: 0.8rem 1.5rem;
  border-radius: 25px;
  cursor: pointer;
  font-weight: 600;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(106, 13, 173, 0.3);
}

.carousel-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(106, 13, 173, 0.4);
}

.carousel-btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
}

.carousel-indicators {
  display: flex;
  justify-content: center;
  gap: 0.5rem;
  margin-top: 1rem;
}

.indicator {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background: rgba(106, 13, 173, 0.3);
  cursor: pointer;
  transition: all 0.3s ease;
}

.indicator.active {
  background: #6A0DAD;
  transform: scale(1.2);
}

/* About Section Enhancement */
.about { 
  padding: 100px 0;
  background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
  color: white;
}

.about::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle at 30% 70%, rgba(106, 13, 173, 0.03) 0%, transparent 50%);
}

.about-grid { 
  display: grid; 
  gap: 3rem; 
  grid-template-columns: 2fr 1fr; 
  align-items: center;
  position: relative;
  z-index: 1;
}

.about-text {
  animation: fadeInLeft 1s ease-out;
}

@keyframes fadeInLeft {
  0% {
    opacity: 0;
    transform: translateX(-50px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.about-text h3 {
  font-size: 2.5rem;
  margin-bottom: 1.5rem;
}

.about-text p {
  font-size: 1.1rem;
  margin-bottom: 2rem;
  opacity: 0.9;
}

.about-text ul {
  margin-top: 1.5rem;
  list-style: none;
}

.about-text li {
  margin: 0.8rem 0;
  padding-left: 1.5rem;
  position: relative;
  transition: transform 0.3s ease;
  font-size: 1.1rem;
  opacity: 0.9;
}

.about-text li:hover {
  transform: translateX(10px);
}

.about-text li::before {
  content: '✔';
  position: absolute;
  left: 0;
  color: #6A0DAD;
  font-weight: bold;
  font-size: 1.1rem;
}

.stat-card {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 20px;
  padding: 3rem 2rem;
  text-align: center;
  color: #6A0DAD;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  animation: fadeInRight 1s ease-out;
}

@keyframes fadeInRight {
  0% {
    opacity: 0;
    transform: translateX(50px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.stat-card::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(106, 13, 173, 0.1) 0%, transparent 70%);
  animation: rotate 20s linear infinite;
}

@keyframes rotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.stat-card:hover {
  transform: translateY(-10px) scale(1.02);
  background: rgba(255, 255, 255, 0.15);
  box-shadow: 0 25px 60px rgba(106, 13, 173, 0.2);
}

.stat-card i {
  font-size: 3rem;
  color: #fbbf24;
  margin-bottom: 1rem;
  display: block;
  animation: bounce 2s ease-in-out infinite;
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
  40% { transform: translateY(-10px); }
  60% { transform: translateY(-5px); }
}

.stat-card h4 {
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 0.5rem;
}

/* Contact Section */
.contact { 
  padding: 100px 0; 
  text-align: center; 
  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  min-height: 400px; /* Added to ensure visibility */
  position: relative;
  z-index: 1; /* Ensure it’s not hidden behind other elements */
}

.contact::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle at 50% 50%, rgba(106, 13, 173, 0.05) 0%, transparent 70%);
}

.contact-grid {
  display: grid; 
  grid-template-columns: repeat(auto-fit,minmax(300px,1fr));
  gap: 2rem; 
  margin-top: 3rem;
  position: relative;
  z-index: 1;
}

.contact-card {
  background: rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 15px;
  padding: 2rem;
  text-align: center;
  transition: all 0.3s ease;
}

.contact-card:hover { 
  transform: translateY(-5px);
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
}

.contact-card::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: linear-gradient(45deg, #6A0DAD, #9c27b0);
  transform: scaleX(0);
  transition: transform 0.3s ease;
}

.contact-card:hover::after {
  transform: scaleX(1);
}

.contact-card i {
  font-size: 2.5rem;
  color: #9333ea;
  margin-bottom: 1rem;
  transition: all 0.3s ease;
}

.contact-card:hover i {
  transform: scale(1.2) rotate(10deg);
}

.contact-card h4 {
  font-size: 1.3rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  color: #1e293b;
}

.contact-card p {
  color: #64748b;
}

/* Footer Enhancement */
.footer { 
  background: linear-gradient(135deg, #4a0072, #6a1b9a); 
  color: #eee; 
  padding: 3rem 2rem 1rem;
  position: relative;
  overflow: hidden;
}

.footer::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.05) 0%, transparent 50%);
}

.footer-grid { 
  display: grid; 
  grid-template-columns: repeat(auto-fit,minmax(200px,1fr)); 
  gap: 2rem;
  position: relative;
  z-index: 1;
}

.footer h4, .footer h5 { 
  color: #fff; 
  margin-bottom: 1rem;
  position: relative;
}

.footer h4::after, .footer h5::after {
  content: '';
  position: absolute;
  bottom: -5px;
  left: 0;
  width: 30px;
  height: 2px;
  background: linear-gradient(45deg, #d1c4e9, #fff);
  border-radius: 1px;
}

.footer ul {
  list-style: none;
}

.footer ul li {
  margin: 0.5rem 0;
  transition: all 0.3s ease;
  cursor: pointer;
}

.footer ul li:hover {
  transform: translateX(10px);
  color: #d1c4e9;
}

.footer-bottom { 
  text-align: center; 
  margin-top: 2rem; 
  font-size: 0.85rem;
  position: relative;
  z-index: 1;
  padding-top: 1rem;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
}

/* Enhanced Emergency Button */
.emergency-btn {
  position: fixed;
  bottom: 20px; 
  right: 20px;
  background: linear-gradient(45deg, #ff1744, #ff5722);
  color: white;
  border: none;
  padding: 1.2rem;
  border-radius: 50%;
  font-size: 1.5rem;
  cursor: pointer;
  box-shadow: 0 8px 32px rgba(255, 23, 68, 0.4);
  animation: pulse 2s infinite, float 4s ease-in-out infinite;
  transition: all 0.3s ease;
  z-index: 1000;
}

.emergency-btn:hover {
  transform: scale(1.1);
  box-shadow: 0 12px 40px rgba(255, 23, 68, 0.6);
}

@keyframes pulse {
  0% { 
    transform: scale(1); 
    box-shadow: 0 8px 32px rgba(255, 23, 68, 0.4), 0 0 0 0 rgba(255, 23, 68, 0.7); 
  }
  70% { 
    transform: scale(1.05); 
    box-shadow: 0 12px 40px rgba(255, 23, 68, 0.6), 0 0 0 20px rgba(255, 23, 68, 0); 
  }
  100% { 
    transform: scale(1); 
    box-shadow: 0 8px 32px rgba(255, 23, 68, 0.4), 0 0 0 0 rgba(255, 23, 68, 0); 
  }
}

/* Responsive Design */
@media (max-width: 768px) {
  .hero h2 { font-size: 2rem; }
  .feature-slide { grid-template-columns: 1fr; }
  .about-grid { grid-template-columns: 1fr; gap: 2rem; }
  .carousel-nav { flex-direction: column; align-items: center; }
  .nav-links { display: none; }
  .menu-btn { display: block; }
}

/* Scroll animations */
.fade-in {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.6s ease;
}

.fade-in.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Container utility */
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;
}
  </style>
</head>
<body>
  <!-- Loading Overlay -->
  <div class="loading-overlay" id="loadingOverlay">
    <div class="spinner"></div>
  </div>

  <!-- Error Toast -->
  <div class="error-toast" id="errorToast">
    <span id="toastMessage"></span>
  </div>

  <!-- Header -->
  <header class="header" id="header">
    <div class="container nav-container">
      <div class="logo">
        <div class="logo-icon">
          
        </div>
        <!-- <h1>SWASTHYASAKHI</h1> -->
      </div>
      <nav class="nav-links" id="nav-links">
        <a href="#home">Home</a>
        <a href="#features">Features</a>
        <a href="#about">About</a>
        <a href="#contact">Contact</a>
        <a href="../login.html">Login/Signup</a>
      </nav>
      <button class="menu-btn" id="menu-btn">
        <i data-lucide="menu"></i>
      </button>
    </div>
  </header>

  <!-- Hero Section -->
  <section id="home" class="hero">
    <div class="hero-overlay"></div>
    <div class="container hero-content">
      <h2>Your Health, <span class="gradient-text">Our Priority</span></h2>
      <p class="subtitle">Complete women's health solutions at your fingertips</p>
      <p class="desc">From period tracking to pregnancy care, get personalized health guidance and connect with our caring community of women.</p>
      <div class="hero-buttons">
        <button class="btn primary" onclick="handleButtonClick('start')">Start Your Journey</button>
        <!-- <button class="btn secondary">Learn More</button> -->
      </div>
      <!-- <div class="badge">Available in: हिंदी • English • Regional Languages</div> -->
    </div>
  </section>

  <!-- Features with Carousel -->
  <section id="features" class="features">
    <div class="container">
      <h3>Everything You Need for <span class="highlight">Women's Health</span></h3>
      <p class="section-desc">Simple, caring, and comprehensive health solutions designed specifically for women</p>
      
      <div class="carousel-container">
        <div class="feature-carousel" id="featureCarousel">
          <!-- Slide 1 -->
          <div class="feature-slide">
            <a href="../period/index.html" class="feature-card" onclick="handleFeatureClick('period-tracker')">
              <div class="icon bg-purple"><i data-lucide="calendar"></i></div>
              <h4>Period Tracker</h4>
              <p>Track your cycle with ease and get personalized insights</p>
            </a>
            <a href="http://localhost:8501" target="_blank" class="feature-card" onclick="handleFeatureClick('pregnancy-care')">
              <div class="icon bg-purple-dark"><i data-lucide="baby"></i></div>
              <h4>Pregnancy Care</h4>
              <p>Complete pregnancy guidance and monitoring</p>
            </a>
            <a href="../chat/index.html" target="_blank" class="feature-card" onclick="handleFeatureClick('ask-didi')">
              <div class="icon bg-purple-light"><i data-lucide="users"></i></div>
              <h4>Ask-a-Didi</h4>
              <p>Community support & expert advice</p>
            </a>
          </div>
          
          <!-- Slide 2 -->
          <div class="feature-slide">
            <a href="http://localhost:8501" target="_blank" class="feature-card" onclick="handleFeatureClick('skin-detection')">
              <div class="icon bg-purple-light"><i data-lucide="scan"></i></div>
              <h4>Skin Detection</h4>
              <p>Get instant skin analysis & personalized tips</p>
            </a>
            <a href="../quiz/quiz.html" class="feature-card" onclick="handleFeatureClick('health-quiz')">
              <div class="icon bg-purple"><i data-lucide="brain"></i></div>
              <h4>Health Quizzes</h4>
              <p>Learn about your health through interactive quizzes</p>
            </a>
            <a href="../utility/index.html" class="feature-card" onclick="handleFeatureClick('safety-utility')">
              <div class="icon bg-purple-dark"><i data-lucide="shield"></i></div>
              <h4>Safety & Utility</h4>
              <p>Ensures protection and minimizes risk for users</p>
            </a>
          </div>
          
          <!-- Slide 3 -->
          <div class="feature-slide">
            <a href="../pcod/mainpagepcos.html" class="feature-card" onclick="handleFeatureClick('pcod-pcos')">
              <div class="icon bg-purple"><i data-lucide="activity"></i></div>
              <h4>PCOD & PCOS</h4>
              <p>Smart PCOS detection and management tool</p>
            </a>
            <a href="../daadiKeNuske/index.html" class="feature-card" onclick="handleFeatureClick('pcod-pcos')">
              <div class="icon bg-purple"><i data-lucide="activity"></i></div>
              <h4>Dadi ke Nuske </h4>
              <p>Purane Nuskon se naye solutions</p>
            </a>
          </div>
        </div>
      </div>
      <div class="carousel-indicators">
        <div class="indicator active" onclick="goToSlide(0)"></div>
        <div class="indicator" onclick="goToSlide(1)"></div>
        <div class="indicator" onclick="goToSlide(2)"></div>
      </div>
    </div>
  </section>

  <!-- About -->
  <section id="about" class="about">
    <div class="container about-grid">
      <div class="about-text">
        <h3>Empowering Women's Health <span class="highlight">Everywhere</span></h3>
        <p>SWASTHYASAKHI is designed to bridge the gap in women's healthcare access, especially for rural and semi-urban communities.</p>
        <ul>
          <li>✔ Simple, intuitive interface for all tech levels</li>
          <li>✔ Multilingual support and voice queries</li>
          <li>✔ Community-driven support system</li>
          <li>✔ Comprehensive health tracking tools</li>
        </ul>
      </div>
    </div>
  </section>

  <!-- Contact -->
  <section id="contact" class="contact">
    <div class="container">
      <h3>Get in <span class="highlight">Touch</span></h3>
      <p class="section-desc">We're here to support your health journey every step of the way</p>
      <div class="contact-grid">
        <div class="contact-card fade-in">
          <i data-lucide="phone"></i>
          <h4>Call Us</h4>
          <p>+91 1800-123-HEALTH</p>
        </div>
        <div class="contact-card fade-in">
          <i data-lucide="mail"></i>
          <h4>Email Us</h4>
          <p>care@swasthyasakhi.com</p>
        </div>
        <div class="contact-card fade-in">
          <i data-lucide="map-pin"></i>
          <h4>Visit Us</h4>
          <p>Pan-India Service</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Footer -->
  <footer class="footer">
    <div class="container footer-grid">
      <div>
        <h4>SWASTHYASAKHI</h4>
        <p>Empowering women's health through accessible, caring, and comprehensive solutions.</p>
      </div>
      <div>
        <h5>Features</h5>
        <ul>
          <li>Period Tracker</li>
          <li>Pregnancy Care</li>
          <li>Ask-a-Didi Community</li>
          <li>Health Quizzes</li>
        </ul>
      </div>
      <div>
        <h5>Support</h5>
        <ul>
          <li>Help Center</li>
          <li>Contact Us</li>
          <li>Privacy Policy</li>
          <li>Terms of Service</li>
        </ul>
      </div>
      <div>
        <h5>Languages</h5>
        <ul>
          <li>Hindi - हिंदी</li>
          <li>English</li>
          <li>Regional Languages</li>
          <li>Voice Support</li>
        </ul>
      </div>
    </div>
    <div class="footer-bottom">
      <p>&copy; 2024 SWASTHYASAKHI. Made with ❤️ for women's health.</p>
    </div>
  </footer>

  <!-- Floating Emergency Button -->
  <button class="emergency-btn" onclick="handleEmergency()">
    <i data-lucide="alert-triangle"></i>
  </button>

  <script>
    // Error Handling System
    class ErrorHandler {
      static instance = null;
      
      constructor() {
        if (ErrorHandler.instance) {
          return ErrorHandler.instance;
        }
        ErrorHandler.instance = this;
        this.initializeErrorHandling();
      }
      
      initializeErrorHandling() {
        window.addEventListener('error', (event) => {
          this.logError('JavaScript Error', event.error);
          this.showToast('An error occurred. Please try again.', 'error');
        });
        
        window.addEventListener('unhandledrejection', (event) => {
          this.logError('Promise Rejection', event.reason);
          this.showToast('Something went wrong. Please refresh the page.', 'error');
          event.preventDefault();
        });
        
        window.addEventListener('offline', () => {
          this.showToast('You are offline. Some features may not work.', 'warning');
        });
        
        window.addEventListener('online', () => {
          this.showToast('Connection restored!', 'success');
        });
      }
      
      showToast(message, type = 'error') {
        const toast = document.getElementById('errorToast');
        const toastMessage = document.getElementById('toastMessage');
        
        if (!toast || !toastMessage) return;
        
        toast.className = 'error-toast';
        if (type !== 'error') {
          toast.classList.add(type);
        }
        
        toastMessage.textContent = message;
        toast.classList.add('show');
        
        setTimeout(() => {
          toast.classList.remove('show');
        }, 4000);
      }
      
      showLoading() {
        const overlay = document.getElementById('loadingOverlay');
        if (overlay) {
          overlay.style.display = 'flex';
        }
      }
      
      hideLoading() {
        const overlay = document.getElementById('loadingOverlay');
        if (overlay) {
          overlay.style.display = 'none';
        }
      }
      
      async safeNavigate(url, target = '_self') {
        try {
          this.showLoading();
          
          await new Promise(resolve => setTimeout(resolve, 500));
          
          if (target === '_blank') {
            window.open(url, '_blank');
          } else {
            window.location.href = url;
          }
          
          this.showToast('Loading...', 'success');
        } catch (error) {
          this.logError('Navigation Error', error);
          this.showToast('Failed to navigate. Please try again.', 'error');
        } finally {
          setTimeout(() => this.hideLoading(), 1000);
        }
      }
      
      logError(type, error) {
        const errorInfo = {
          type,
          message: error?.message || error,
          stack: error?.stack,
          timestamp: new Date().toISOString(),
          url: window.location.href,
          userAgent: navigator.userAgent
        };
        
        console.error('Error logged:', errorInfo);
      }
      
      validateForm(formData) {
        const errors = [];
        
        for (const [key, value] of Object.entries(formData)) {
          if (!value || value.trim() === '') {
            errors.push(`${key} is required`);
          }
        }
        
        if (errors.length > 0) {
          this.showToast(errors[0], 'error');
          return false;
        }
        
        return true;
      }
    }
    
    const errorHandler = new ErrorHandler();
    
    // Carousel functionality
    let currentSlide = 0;
    const totalSlides = 3;
    
    function changeSlide(direction) {
      try {
        const carousel = document.getElementById('featureCarousel');
        const indicators = document.querySelectorAll('.indicator');
        
        if (!carousel || !indicators.length) {
          throw new Error('Carousel elements not found');
        }
        
        currentSlide += direction;
        
        if (currentSlide >= totalSlides) {
          currentSlide = 0;
        } else if (currentSlide < 0) {
          currentSlide = totalSlides - 1;
        }
        
        carousel.style.transform = `translateX(-${currentSlide * 100}%)`;
        
        indicators.forEach((indicator, index) => {
          indicator.classList.toggle('active', index === currentSlide);
        });
        
        updateCarouselButtons();
        
      } catch (error) {
        errorHandler.logError('Carousel Error', error);
        errorHandler.showToast('Carousel navigation failed', 'error');
      }
    }
    
    function goToSlide(slideIndex) {
      try {
        if (slideIndex < 0 || slideIndex >= totalSlides) {
          throw new Error('Invalid slide index');
        }
        
        const carousel = document.getElementById('featureCarousel');
        const indicators = document.querySelectorAll('.indicator');
        
        currentSlide = slideIndex;
        carousel.style.transform = `translateX(-${currentSlide * 100}%)`;
        
        indicators.forEach((indicator, index) => {
          indicator.classList.toggle('active', index === currentSlide);
        });
        
        updateCarouselButtons();
        
      } catch (error) {
        errorHandler.logError('Slide Navigation Error', error);
        errorHandler.showToast('Failed to navigate to slide', 'error');
      }
    }
    
    function updateCarouselButtons() {
      const prevBtn = document.getElementById('prevBtn');
      const nextBtn = document.getElementById('nextBtn');
      
      if (prevBtn && nextBtn) {
        prevBtn.disabled = false;
        nextBtn.disabled = false;
      }
    }
    
    function startAutoPlay() {
      setInterval(() => {
        changeSlide(1);
      }, 5000);
    }
    
    function handleButtonClick(action) {
      try {
        errorHandler.showLoading();
        
        switch (action) {
          case 'start':
            errorHandler.showToast('Welcome to your health journey!', 'success');
            errorHandler.safeNavigate('../login.html');
            break;
          case 'learn':
            document.getElementById('about').scrollIntoView({ 
              behavior: 'smooth' 
            });
            errorHandler.hideLoading();
            break;
          default:
            throw new Error('Unknown action');
        }
      } catch (error) {
        errorHandler.logError('Button Click Error', error);
        errorHandler.showToast('Action failed. Please try again.', 'error');
        errorHandler.hideLoading();
      }
    }
    
    function handleFeatureClick(feature) {
      try {
        errorHandler.showToast(`Opening ${feature.replace('-', ' ')}...`, 'success');
      } catch (error) {
        errorHandler.logError('Feature Click Error', error);
        errorHandler.showToast('Failed to open feature', 'error');
      }
    }
    
    function handleEmergency() {
      try {
        errorHandler.showToast('🚨 Emergency Support Activated! 🚑 Connecting you to help...', 'error');
        
        setTimeout(() => {
          errorHandler.showToast('Emergency services contacted. Help is on the way.', 'success');
        }, 2000);
        
      } catch (error) {
        errorHandler.logError('Emergency Handler Error', error);
        errorHandler.showToast('Emergency system unavailable. Please call 112 directly.', 'error');
      }
    }
    
    function initializeMobileMenu() {
      try {
        const menuBtn = document.getElementById("menu-btn");
        const navLinks = document.getElementById("nav-links");
        
        if (!menuBtn || !navLinks) {
          throw new Error('Menu elements not found');
        }
        
        menuBtn.addEventListener("click", () => {
          navLinks.classList.toggle("active");
          const isActive = navLinks.classList.contains("active");
          menuBtn.innerHTML = isActive
            ? '<i data-lucide="x"></i>'
            : '<i data-lucide="menu"></i>';
          lucide.createIcons();
        });
      } catch (error) {
        errorHandler.logError('Mobile Menu Error', error);
      }
    }
    
    function initializeScrollAnimations() {
      try {
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('visible');
            }
          });
        }, { threshold: 0.3 });
        
        document.querySelectorAll('.fade-in').forEach(el => {
          observer.observe(el);
        });
      } catch (error) {
        errorHandler.logError('Scroll Animation Error', error);
      }
    }
    
    function initializeHeaderScroll() {
      try {
        const header = document.getElementById('header');
        if (!header) return;
        
        window.addEventListener('scroll', () => {
          if (window.scrollY > 100) {
            header.classList.add('scrolled');
          } else {
            header.classList.remove('scrolled');
          }
        });
      } catch (error) {
        errorHandler.logError('Header Scroll Error', error);
      }
    }
    
    document.addEventListener('DOMContentLoaded', function() {
      try {
        lucide.createIcons();
        initializeMobileMenu();
        initializeScrollAnimations();
        initializeHeaderScroll();
        startAutoPlay();
        
        setTimeout(() => {
          errorHandler.showToast('Welcome to SwasthyaSakhi! 💜', 'success');
        }, 1000);
        
      } catch (error) {
        errorHandler.logError('Initialization Error', error);
        errorHandler.showToast('Some features may not work properly', 'warning');
      }
    });
    
    window.addEventListener('load', () => {
      try {
        const loadTime = performance.now();
        console.log(`Page loaded in ${loadTime.toFixed(2)}ms`);
        
        if (loadTime > 3000) {
          errorHandler.showToast('Page loaded slowly. Check your connection.', 'warning');
        }
      } catch (error) {
        errorHandler.logError('Performance Monitoring Error', error);
      }
    });
  </script>
</body>
</html>
